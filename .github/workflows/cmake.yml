name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: install GTest
      run:  |
        sudo apt-get install libgtest-dev
        cd /usr/src/gtest
        sudo cmake CMakeLists.txt
        sudo make
    
#     - name: Install Boost
#       run: sudo apt-get update && sudo apt-get install libboost-all-dev
      
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
      
    
    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      
    - name: Build VDSProject_test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --target VDSProject_test
      
    - name: Run VDSProject_test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ${{runner.workspace}}/build/src/test/VDSProject_test
    
#     - name: Build VDSProject_reachability
#       working-directory: ${{runner.workspace}}/build
#       shell: bash
#       run: cmake --build . --config $BUILD_TYPE --target VDSProject_reachability
    
#     - name: Run VDSProject_reachability
#       working-directory: ${{runner.workspace}}/build
#       shell: bash
#       run: ${{runner.workspace}}/build/src/reachability/VDSProject_reachability
      
      
#     - name: Test
#       working-directory: ${{github.workspace}}/build
#       # Execute tests defined by the CMake configuration.  
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: ctest -C ${{env.BUILD_TYPE}}
      
  